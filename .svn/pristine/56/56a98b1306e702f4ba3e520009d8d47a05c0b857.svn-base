package com.appyuken.frikiados.menu;

import java.util.HashMap;
import java.util.List;

import com.appyuken.frikiados.*;
import com.appyuken.frikiados.classes.ResultGetScore;
import com.appyuken.frikiados.classes.Score;
import com.appyuken.frikiados.service.RestfulWebService;
import android.os.AsyncTask;
import android.os.Bundle;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.view.Menu;
import android.widget.Toast;

public class RankingActivity extends Activity {
	ResultGetScore resultGetSocres;
	private ProgressDialog dialog = null;
	private List<Score> listOfBestScores;


	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_ranking);
		new RefreshScores
		().execute();
	}
	
	
	public class RefreshScores extends AsyncTask<Void, String, Void> {

		@Override
		protected void onPreExecute() {
			dialog = new ProgressDialog(RankingActivity.this);
			dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
			dialog.setCancelable(false);
			dialog.setMessage("Cargando Ranking! Por favor espere unos segundos...!");
			dialog.show();

		}
		
		@Override
		protected Void doInBackground(Void... unused) {
			resultGetSocres = RestfulWebService.getFrikiadosRanking(getApplicationContext());
			//RestfulWebService.sendScore("4", "704489022", "200", getApplicationContext());
			//RestfulWebService.updateUserProfile("4", "704489022", "jmaniviesa@gmail.com", "1985-09-07", "male", "supermani", getApplicationContext());
			return (null);
		}

		@Override
		protected void onPostExecute(Void unused) {
			
			if (resultGetSocres != null) 
			{
				switch (resultGetSocres.getError())
	        	{
		        	case 0:
		        		//NO HAY ERROR
		        		try {
		    		        dialog.dismiss();
		    		        dialog = null;
		    		        printScores(resultGetSocres);
		    				//goToTarget = false;
		    		    } catch (Exception e) {
		    		        // nothing
		    		    }	
		        		break;
		        		
		        	case 1:
		        		try {
		    		        dialog.dismiss();
		    		        dialog = null;
		    				//goToTarget = false;
		    		    } catch (Exception e) {
		    		        // nothing
		    		    }	
		        		//ERROR WEBSERVICE
		        		System.out.println("Error WebService");
		        		break;
		        		
		        	case 2:
		        		//ERROREXCEPTION
		        		try {
		    		        dialog.dismiss();
		    		        dialog = null;
		    				//goToTarget = false;
		    		    } catch (Exception e) {
		    		        // nothing
		    		    }	
		        		System.out.println("Error Exception");

		        		break;
		        		
		        		
		        	default:
		        		break;
	        	}
			}
		}

		
	}
	private void printScores(ResultGetScore resultGetSocres) {
		// TODO Auto-generated method stub
		listOfBestScores = resultGetSocres.getScore();
		for (int i=0; i<listOfBestScores.size(); i++){
			System.out.println("nickname: "+ listOfBestScores.get(i).getUserNickname());
			System.out.println("score: "+ listOfBestScores.get(i).getUserScore());
			System.out.println("date: "+ listOfBestScores.get(i).getDateCreation());
		}
	}
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.ranking, menu);
		return true;
	}

}
	
